{"version":3,"file":"static/js/918.b3918f34.chunk.js","mappings":"4PAEaA,EAAOC,EAAAA,GAAAA,KAAH,+DAIJC,EAAQD,EAAAA,GAAAA,MAAH,uCAGLE,EAAUF,EAAAA,GAAAA,OAAH,wB,SCQpB,EAbmB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACpB,OACE,UAACJ,EAAD,CAAMI,SAAUA,EAAhB,WACE,SAACF,EAAD,CAAOG,KAAK,YACZ,SAACF,EAAD,CAASG,KAAK,SAAd,sBAGL,E,iBCoBD,EAzBkB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC1B,OACE,SAAC,IAAD,UACGD,EAAME,KAAI,SAAAC,GAAI,aACb,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAK,iBAAD,OAAmBN,IAAxD,mBACGE,EAAKK,aADR,QACiBL,EAAKL,QAFTK,EAAKE,GADP,KASpB,E,SCoBD,EAhCe,WACb,OAA0CI,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,UAErCC,EAAAA,EAAAA,YAAU,WACHF,GAGL,mCAAC,qGACmBG,EAAAA,EAAAA,IAAmBH,GADtC,OACOI,EADP,OAECR,EAAiBQ,EAAIC,KAAKC,SAF3B,2CAAD,sDAID,GAAE,CAACN,IASJ,OACE,4BACE,SAAC,EAAD,CAAYlB,SATK,SAAAyB,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAASC,OAAOH,MACvCV,EAAgB,CAAEb,MAAOuB,IACzBF,EAAEG,OAAOG,OACV,IAKIlB,EAAcmB,OAAS,GACtB,SAAC,EAAD,CAAW7B,MAAOU,EAAeT,MAAOc,IACtC,OAGT,C","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/FilmsList/FilmsList.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\nmargin-top: 15px;\nmargin-left: 15px;\n`\nexport const Input = styled.input`\nwidth: 250px;\n`\nexport const FormBtn = styled.button`\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, FormBtn } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input name=\"search\"></Input>\n      <FormBtn type=\"submit\">Search</FormBtn>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { List, ListItem } from './FilmsList.styled';\n\nconst FilmsList = ({ films, query }) => {\n  return (\n    <List>\n      {films.map(film => (\n        <ListItem key={film.id}>\n          <Link to={`${film.id}`} state={{ from: `/movies?query=${query}` }}>\n            {film.title ?? film.name}\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nFilmsList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n  query: PropTypes.string.isRequired,\n};\n\nexport default FilmsList;\n","import React, { useEffect, useState } from 'react';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport FilmsList from '../../components/FilmsList/FilmsList';\nimport { fetchMovieBySearch } from '../.././components/api-services';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [filmsBySearch, setFilmsBySearch] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    (async function getFilmsBySearch() {\n      const res = await fetchMovieBySearch(searchQuery);\n      setFilmsBySearch(res.data.results);\n    })();\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const value = e.target.elements.search.value;\n    setSearchParams({ query: value });\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={handleSubmit} />\n      {filmsBySearch.length > 0 ? (\n        <FilmsList films={filmsBySearch} query={searchQuery} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["Form","styled","Input","FormBtn","onSubmit","name","type","films","query","map","film","to","id","state","from","title","useState","filmsBySearch","setFilmsBySearch","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","fetchMovieBySearch","res","data","results","e","preventDefault","value","target","elements","search","reset","length"],"sourceRoot":""}