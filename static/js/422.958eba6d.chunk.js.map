{"version":3,"file":"static/js/422.958eba6d.chunk.js","mappings":"sSAGaA,EAAUC,EAAAA,GAAAA,IAAH,+GAQPC,EAASD,EAAAA,GAAAA,IAAH,yCAINE,EAAqBF,EAAAA,GAAAA,IAAH,sCAGlBG,EAAQH,EAAAA,GAAAA,GAAH,8EAKLI,EAAQJ,EAAAA,GAAAA,EAAH,0DAILK,EAAWL,EAAAA,GAAAA,EAAH,kGAORM,EAASN,EAAAA,GAAAA,EAAH,kGAONO,EAAeP,EAAAA,GAAAA,KAAH,oFAMZQ,GAAiBR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,qYAwBdU,EAAcV,EAAAA,GAAAA,IAAH,0HAQXW,GAAkBX,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,qL,SChB5B,EA9CqB,WAAO,IAAD,IACjBY,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAiCE,EAAAA,EAAAA,UAAS,MAA1C,eAAOC,EAAP,KAAkBC,EAAlB,KAGMC,EAAQ,qBAFGC,EAAAA,EAAAA,MAESC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAYzC,IAVAC,EAAAA,EAAAA,YAAU,YACR,mCAAC,8GAEqBC,EAAAA,EAAAA,IAAeV,GAFpC,OAESW,EAFT,OAGGP,EAAYO,EAAIC,MAHnB,uGAAD,sDAOD,GAAE,CAACZ,KAECG,EACH,OAAO,KAGT,IAAQU,EAAuDV,EAAvDU,YAAaC,EAA0CX,EAA1CW,MAAOC,EAAmCZ,EAAnCY,aAAcC,EAAqBb,EAArBa,SAAUC,EAAWd,EAAXc,OAEpD,OACE,4BACE,SAACrB,EAAD,CAAgBsB,GAAIb,EAApB,6BACA,UAAClB,EAAD,YACE,SAACE,EAAD,CAAQ8B,IAAG,yCAAoCN,GAAeO,IAAI,MAClE,UAAC9B,EAAD,YACE,SAACC,EAAD,UAAQuB,KACR,UAACtB,EAAD,0BAAoB6B,SAAwB,GAAfN,GAA7B,QACA,SAACtB,EAAD,wBACA,uBAAIuB,KACJ,SAACtB,EAAD,sBACA,uBAAIuB,EAAOK,KAAI,SAAAC,GAAI,OAAI,SAAC5B,EAAD,UAA6B4B,EAAKC,MAAfD,EAAKE,GAA5B,aAGvB,UAAC3B,EAAD,YACE,SAACC,EAAD,CAAiBmB,GAAG,OAAOX,MAAO,CAAEC,KAAMH,GAA1C,mBACA,SAACN,EAAD,CAAiBmB,GAAG,UAAUX,MAAO,CAAEC,KAAMH,GAA7C,yBAEF,SAAC,KAAD,MAGL,C","sources":["components/FilmsDetails/FilmsDetails.styled.js","components/FilmsDetails/FilmsDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding: 10px;\n\n  margin-top: 16px;\n  display: flex;\n  align-items: flex-start;\n`;\n\nexport const Poster = styled.img`\n  width: 200px;\n`;\n\nexport const WrapperDescription = styled.div`\npadding: 20px;`;\n\nexport const Title = styled.h2`\nmargin: 0px;\nmargin-bottom: 16px;\nfont-weight: bold;`\n\nexport const Score = styled.p`\nmargin: 0px;\nmargin-bottom: 16px;`\n\nexport const Overview = styled.p`\nfont-size: 16px;\nfont-weight: bold;\n\nmargin: 0px;\nmargin-bottom: 16px;`\n\nexport const Genres = styled.p`\nfont-size: 14px;\nfont-weight: bold;\n\nmargin: 0px;\nmargin-bottom: 16px;`;\n\nexport const GenreElement = styled.span`\nfont-size: 14px;\n\nmargin: 0px;\nmargin: 0px 15px 15px 0px;`;\n\nexport const NavigationLink = styled(Link)`\n  coursor: pointer;\n  text-decoration: none;\n  font-size: 12px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  max-width: 90px;\n  height: 20px;\n\n  margin-top: 15px;\n  margin-right: 10px;\n  margin-left: 15px;\n\n  padding: 1px;\n\n  background-color: #80808059;\n  color: #000;\n  border-radius: 2px;\n  border: 1px solid grey;\n`;\n\nexport const WrapperInfo = styled.div`\n  display: flex;\n  padding: 14px 30px;\n\n  border-top: 2px solid;\n  border-bottom: 2px solid;\n`;\n\nexport const InformationLink = styled(Link)`\n  coursor: pointer;\n\n  font-size: 16px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-left: 15px;\n\n  color: #000;\n`;\n","import React, {useEffect, useState} from \"react\";\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieById } from '../api-services';\nimport {\n  NavigationLink,\n  InformationLink,\n  GenreElement,\n  Genres,\n  Score,\n  Overview,\n  Poster,\n  Title,\n  Wrapper,\n  WrapperInfo,\n  WrapperDescription,\n} from './FilmsDetails.styled';\n\nconst FilmsDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setFilmInfo] = useState(null);\n  const location = useLocation();\n\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    (async function getFilmById() {\n      try {\n        const res = await fetchMovieById(movieId);\n        setFilmInfo(res.data);\n      } catch {\n      }\n    })();\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return null;\n  }\n\n  const { poster_path, title, vote_average, overview, genres } = movieInfo;\n\n  return (\n    <div>\n      <NavigationLink to={backLink}>&larr; Go back</NavigationLink>\n      <Wrapper>\n        <Poster src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt='' />\n        <WrapperDescription>\n          <Title>{title}</Title>\n          <Score>User Score: {parseInt(vote_average * 10)}%</Score>\n          <Overview>Overview</Overview>\n          <p>{overview}</p>\n          <Genres>Genres</Genres>\n          <p>{genres.map(item => <GenreElement key={item.id}>{item.name}</GenreElement>)}</p>\n        </WrapperDescription>\n      </Wrapper>\n      <WrapperInfo>\n        <InformationLink to='cast' state={{ from: backLink }}>Cast</InformationLink>\n        <InformationLink to='reviews' state={{ from: backLink }}>Reviews</InformationLink>\n      </WrapperInfo>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default FilmsDetails;"],"names":["Wrapper","styled","Poster","WrapperDescription","Title","Score","Overview","Genres","GenreElement","NavigationLink","Link","WrapperInfo","InformationLink","movieId","useParams","useState","movieInfo","setFilmInfo","backLink","useLocation","state","from","useEffect","fetchMovieById","res","data","poster_path","title","vote_average","overview","genres","to","src","alt","parseInt","map","item","name","id"],"sourceRoot":""}