{"version":3,"file":"static/js/422.c828bd80.chunk.js","mappings":"gSAGaA,EAAUC,EAAAA,GAAAA,IAAH,sBAEPC,EAASD,EAAAA,GAAAA,IAAH,sBAENE,EAAqBF,EAAAA,GAAAA,IAAH,sBAElBG,EAAQH,EAAAA,GAAAA,EAAH,sBAELI,EAAWJ,EAAAA,GAAAA,EAAH,sBAERK,EAASL,EAAAA,GAAAA,EAAH,sBAENM,EAAeN,EAAAA,GAAAA,KAAH,sBAEZO,GAAiBP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,sB,SC2C3B,EA9CqB,WAAO,IAAD,IACjBS,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAAgCE,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAGMC,EAAQ,qBAFGC,EAAAA,EAAAA,MAESC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAYzC,IAVAC,EAAAA,EAAAA,YAAU,YACR,mCAAC,8GAEqBC,EAAAA,EAAAA,IAAeV,GAFpC,OAESW,EAFT,OAGGP,EAAYO,EAAIC,MAHnB,uGAAD,sDAOD,GAAE,CAACZ,KAECG,EACH,OAAO,KAGT,IAAQU,EAAuDV,EAAvDU,YAAaC,EAA0CX,EAA1CW,MAAOC,EAAmCZ,EAAnCY,aAAcC,EAAqBb,EAArBa,SAAUC,EAAWd,EAAXc,OAEpD,OACE,4BACE,SAACnB,EAAD,CAAgBoB,GAAIb,EAApB,mBACA,UAACf,EAAD,YACE,SAACE,EAAD,CAAQ2B,IAAG,yCAAoCN,GAAeO,IAAI,MAClE,UAAC3B,EAAD,YACE,SAACC,EAAD,UAAQoB,KACR,wCAAgBO,SAAwB,GAAfN,GAAzB,QACA,SAACpB,EAAD,wBACA,uBAAIqB,KACJ,SAACpB,EAAD,sBACA,uBAAIqB,EAAOK,KAAI,SAAAC,GAAI,OAAI,SAAC1B,EAAD,UAA6B0B,EAAKC,MAAfD,EAAKE,GAA5B,aAGvB,UAACnC,EAAD,YACE,SAACQ,EAAD,CAAgBoB,GAAG,OAAOX,MAAO,CAAEC,KAAMH,GAAzC,mBACA,SAACP,EAAD,CAAgBoB,GAAG,UAAUX,MAAO,CAAEC,KAAMH,GAA5C,yBAEF,SAAC,KAAD,MAGL,C","sources":["components/FilmsDetails/FilmsDetails.styled.js","components/FilmsDetails/FilmsDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div``;\n\nexport const Poster = styled.img``;\n\nexport const WrapperDescription = styled.div``;\n\nexport const Title = styled.p``;\n\nexport const Overview = styled.p``;\n\nexport const Genres = styled.p``;\n\nexport const GenreElement = styled.span``;\n\nexport const NavigationLink = styled(Link)``;\n","import React, {useEffect, useState} from \"react\";\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieById } from '../api-services';\nimport {\n  NavigationLink,\n  GenreElement,\n  Genres,\n  Overview,\n  Poster,\n  Title,\n  Wrapper,\n  WrapperDescription,\n} from './FilmsDetails.styled';\n\nconst FilmsDetails = () => {\n  const { filmId } = useParams();\n  const [filmInfo, setFilmInfo] = useState(null);\n  const location = useLocation();\n\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    (async function getFilmById() {\n      try {\n        const res = await fetchMovieById(filmId);\n        setFilmInfo(res.data);\n      } catch {\n      }\n    })();\n  }, [filmId]);\n\n  if (!filmInfo) {\n    return null;\n  }\n\n  const { poster_path, title, vote_average, overview, genres } = filmInfo;\n\n  return (\n    <div>\n      <NavigationLink to={backLink}>Back</NavigationLink>\n      <Wrapper>\n        <Poster src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt='' />\n        <WrapperDescription>\n          <Title>{title}</Title>\n          <p>User Score: {parseInt(vote_average * 10)}%</p>\n          <Overview>Overview</Overview>\n          <p>{overview}</p>\n          <Genres>Genres</Genres>\n          <p>{genres.map(item => <GenreElement key={item.id}>{item.name}</GenreElement>)}</p>\n        </WrapperDescription>\n      </Wrapper>\n      <Wrapper>\n        <NavigationLink to='cast' state={{ from: backLink }}>Cast</NavigationLink>\n        <NavigationLink to='reviews' state={{ from: backLink }}>Reviews</NavigationLink>\n      </Wrapper>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default FilmsDetails;"],"names":["Wrapper","styled","Poster","WrapperDescription","Title","Overview","Genres","GenreElement","NavigationLink","Link","filmId","useParams","useState","filmInfo","setFilmInfo","backLink","useLocation","state","from","useEffect","fetchMovieById","res","data","poster_path","title","vote_average","overview","genres","to","src","alt","parseInt","map","item","name","id"],"sourceRoot":""}